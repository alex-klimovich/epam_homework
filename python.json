{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If you are about to ask a question about how to do something in python, please check out &lt;a href=\"/r/learnpython\"&gt;/r/learnpython&lt;/a&gt;. It is a very helpful community that is focused on helping people get answers that they understand.&lt;/p&gt;\n\n&lt;p&gt;As with any subreddit before you post there, please &lt;a href=\"/r/learnpython/wiki/config/sidebar\"&gt;familiarize yourself with the rules and guidelines in their sidebar&lt;/a&gt;. The most notable rule is to not just post the question; explain what you&amp;#39;ve tried and any pseudocode you may have worked on thus far.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"/r/learnpython\"&gt;/r/learnpython&lt;/a&gt; isn&amp;#39;t just for homework; you can get help with most aspects of python that you don&amp;#39;t understand, even if it isn&amp;#39;t for a school project.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;For those who are new to programming, welcome. To those who are returning or are finishing up their schooling, congrats and keep it coming. To those who are lifers in the field I have no words besides keep being cool.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Thanks &lt;a href=\"/u/Needsmoretests\"&gt;/u/Needsmoretests&lt;/a&gt; for putting it well. Please do read &lt;a href=\"https://www.reddit.com/r/Python/comments/3kestk/post_learning_questions_to_rlearnpython/cuxedpo\"&gt;the much better intro / comment written by Needsmoretests below&lt;/a&gt;. There&amp;#39;s so much to learn, and many places to learn it in! &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "If you are about to ask a question about how to do something in python, please check out /r/learnpython. It is a very helpful community that is focused on helping people get answers that they understand.\n\nAs with any subreddit before you post there, please [familiarize yourself with the rules and guidelines in their sidebar](/r/learnpython/wiki/config/sidebar). The most notable rule is to not just post the question; explain what you've tried and any pseudocode you may have worked on thus far.\n\n/r/learnpython isn't just for homework; you can get help with most aspects of python that you don't understand, even if it isn't for a school project.\n\n&gt; For those who are new to programming, welcome. To those who are returning or are finishing up their schooling, congrats and keep it coming. To those who are lifers in the field I have no words besides keep being cool.\n\nThanks /u/Needsmoretests for putting it well. Please do read [the much better intro / comment written by Needsmoretests below](https://www.reddit.com/r/Python/comments/3kestk/post_learning_questions_to_rlearnpython/cuxedpo). There's so much to learn, and many places to learn it in! ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3kestk", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "aphoenix", "media": null, "score": 148, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 11, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": 1441933227.0, "link_flair_css_class": null, "author_flair_css_class": "", "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": true, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3kestk/post_learning_questions_to_rlearnpython/", "name": "t3_3kestk", "created": 1441901976.0, "url": "https://www.reddit.com/r/Python/comments/3kestk/post_learning_questions_to_rlearnpython/", "author_flair_text": "reticulated", "quarantine": false, "title": "Post learning questions to /r/LearnPython", "created_utc": 1441898376.0, "distinguished": "moderator", "mod_reports": [], "visited": false, "num_reports": null, "ups": 148}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o7dn4", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "timothycrosley", "media": null, "score": 6, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": true, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o7dn4/introducing_connectable_an_easy_way_to_make/", "name": "t3_3o7dn4", "created": 1444500446.0, "url": "https://github.com/timothycrosley/connectable#readme", "author_flair_text": null, "quarantine": false, "title": "Introducing Connectable: An easy way to make connections between object (Signals / Slots for Python)", "created_utc": 1444471646.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"domain": "nbviewer.ipython.org", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o3ohq", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "cast42", "media": null, "score": 231, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 20, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o3ohq/xkcd_plots_in_matplotlib/", "name": "t3_3o3ohq", "created": 1444428130.0, "url": "http://nbviewer.ipython.org/url/jakevdp.github.com/downloads/notebooks/XKCD_plots.ipynb", "author_flair_text": null, "quarantine": false, "title": "XKCD plots in Matplotlib", "created_utc": 1444399330.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 231}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o7iwi", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "avinassh", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": true, "edited": false, "link_flair_css_class": null, "author_flair_css_class": "", "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o7iwi/blip_a_bytecode_compiler_for_python_3/", "name": "t3_3o7iwi", "created": 1444505077.0, "url": "https://github.com/bjpop/blip", "author_flair_text": "apprentice", "quarantine": false, "title": "blip - A bytecode compiler for Python 3", "created_utc": 1444476277.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "rkuska.github.io", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o2y4g", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Kusovka", "media": null, "score": 79, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 17, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o2y4g/fedora_and_python3_the_road_so_far/", "name": "t3_3o2y4g", "created": 1444411796.0, "url": "http://rkuska.github.io/2015/10/08/Fedora-and-Python3.html", "author_flair_text": null, "quarantine": false, "title": "Fedora and Python3, The Road So Far.", "created_utc": 1444382996.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 79}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello everybody!&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m currently using Professor Craven&amp;#39;s lessons on programming arcade games with Pygame and Python to learn game development and programming basics with Python. &lt;/p&gt;\n\n&lt;p&gt;However, I&amp;#39;ve been using Python Portable on my USB as of recently. The PyScripter IDE is nice and all, but their latest version that supported Pygame was still Python 2.x. I&amp;#39;d really like to get a more up to date (3.4+ preferably) version of Python working on USB with Pygame. There&amp;#39;s quite a few differences that has been getting me into some trouble with the lessons, especially working with name mangling and class inheritance. Super construct on Python 2 just doesn&amp;#39;t work very well at all from what I hear, too. &lt;/p&gt;\n\n&lt;p&gt;Something that supports some IDEs/could have IDEs added to them would be nice, but at this point, is secondary. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello everybody!\n\nI'm currently using Professor Craven's lessons on programming arcade games with Pygame and Python to learn game development and programming basics with Python. \n\nHowever, I've been using Python Portable on my USB as of recently. The PyScripter IDE is nice and all, but their latest version that supported Pygame was still Python 2.x. I'd really like to get a more up to date (3.4+ preferably) version of Python working on USB with Pygame. There's quite a few differences that has been getting me into some trouble with the lessons, especially working with name mangling and class inheritance. Super construct on Python 2 just doesn't work very well at all from what I hear, too. \n\nSomething that supports some IDEs/could have IDEs added to them would be nice, but at this point, is secondary. ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o5qb2", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Diabeetush", "media": null, "score": 6, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 6, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o5qb2/portable_python/", "name": "t3_3o5qb2", "created": 1444460870.0, "url": "https://www.reddit.com/r/Python/comments/3o5qb2/portable_python/", "author_flair_text": null, "quarantine": false, "title": "Portable Python?", "created_utc": 1444432070.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"domain": "blog.jetbrains.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o3551", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "filippovd20", "media": null, "score": 42, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o3551/announcing_pycharm_5_eap_143165_docker_integration/", "name": "t3_3o3551", "created": 1444417292.0, "url": "http://blog.jetbrains.com/pycharm/2015/10/announcing-pycharm-5-eap-143-165-docker-integration/", "author_flair_text": null, "quarantine": false, "title": "Announcing PyCharm 5 EAP 143.165: Docker Integration", "created_utc": 1444388492.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 42}}, {"kind": "t3", "data": {"domain": "blog.brakmic.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o4fy1", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "brakmic", "media": null, "score": 12, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o4fy1/data_science_for_losers_part_2/", "name": "t3_3o4fy1", "created": 1444440192.0, "url": "http://blog.brakmic.com/data-science-for-losers-part-2/", "author_flair_text": null, "quarantine": false, "title": "Data Science for Losers, Part 2", "created_utc": 1444411392.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 12}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m looking into making a static site for my portfolio using one of the Python SSGs. Does it really matter which one I use or are they all pretty much the same?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm looking into making a static site for my portfolio using one of the Python SSGs. Does it really matter which one I use or are they all pretty much the same?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o5x7z", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "LearnAllThings", "media": null, "score": 3, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o5x7z/static_site_generator_does_it_matter_which_one/", "name": "t3_3o5x7z", "created": 1444464438.0, "url": "https://www.reddit.com/r/Python/comments/3o5x7z/static_site_generator_does_it_matter_which_one/", "author_flair_text": null, "quarantine": false, "title": "Static Site Generator - Does it matter which one?", "created_utc": 1444435638.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o54jx", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "map_guy", "media": null, "score": 7, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o54jx/sondra_a_jsonschemabased_validating_document/", "name": "t3_3o54jx", "created": 1444450652.0, "url": "https://github.com/JeffHeard/sondra", "author_flair_text": null, "quarantine": false, "title": "Sondra - A json-schema-based validating document manager and RESTful API generator for Flask and RethinkDB", "created_utc": 1444421852.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 7}}, {"kind": "t3", "data": {"domain": "pep257.readthedocs.org", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o3lg5", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "FarmerSez", "media": null, "score": 21, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o3lg5/pep257_python_docstring_linter_070_released/", "name": "t3_3o3lg5", "created": 1444426668.0, "url": "http://pep257.readthedocs.org/en/0.7.0/index.html", "author_flair_text": null, "quarantine": false, "title": "Pep257 (Python docstring linter) 0.7.0 released", "created_utc": 1444397868.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 21}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o4e5s", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "cast42", "media": null, "score": 8, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 4, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o4e5s/comparing_python_clustering_algorithms/", "name": "t3_3o4e5s", "created": 1444439413.0, "url": "https://github.com/lmcinnes/hdbscan/blob/master/notebooks/Comparing%20Clustering%20Algorithms.ipynb", "author_flair_text": null, "quarantine": false, "title": "Comparing Python Clustering Algorithms", "created_utc": 1444410613.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 8}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Has anyone used the textbook &lt;a href=\"http://www.amazon.com/Python-Everyone-Cay-S-Horstmann/dp/1118645200\"&gt;Python For Everyone&lt;/a&gt;. I read the Big Java textbook by the same author and really liked it. I want something that is easy to read and has lots of practice problems. Does anyone have an opinion about this book? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Has anyone used the textbook [Python For Everyone](http://www.amazon.com/Python-Everyone-Cay-S-Horstmann/dp/1118645200). I read the Big Java textbook by the same author and really liked it. I want something that is easy to read and has lots of practice problems. Does anyone have an opinion about this book? ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o6imp", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "ImNeworsomething", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o6imp/python_for_everyone/", "name": "t3_3o6imp", "created": 1444476436.0, "url": "https://www.reddit.com/r/Python/comments/3o6imp/python_for_everyone/", "author_flair_text": null, "quarantine": false, "title": "Python for Everyone", "created_utc": 1444447636.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Let&amp;#39;s say I have a Python script that I want to run via a system process through systemd or upstart that monitors other applications or is a small wsgi server using wsgiref.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been thinking of using the system PyPy to handle it since it may be better in handling operations than standard CPython but then there is optimized Cython code as well with cimports and static typing.&lt;/p&gt;\n\n&lt;p&gt;Given the choice, should I go with PyPy or Cythonized code?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Let's say I have a Python script that I want to run via a system process through systemd or upstart that monitors other applications or is a small wsgi server using wsgiref.\n\nI've been thinking of using the system PyPy to handle it since it may be better in handling operations than standard CPython but then there is optimized Cython code as well with cimports and static typing.\n\nGiven the choice, should I go with PyPy or Cythonized code?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o4iqb", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "t3g", "media": null, "score": 6, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 8, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o4iqb/cython_or_pypy_for_background_system_process_on/", "name": "t3_3o4iqb", "created": 1444441288.0, "url": "https://www.reddit.com/r/Python/comments/3o4iqb/cython_or_pypy_for_background_system_process_on/", "author_flair_text": null, "quarantine": false, "title": "Cython or PyPy for background system process on GNU/Linux system?", "created_utc": 1444412488.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"domain": "developer.rackspace.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o3tpg", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "kirang89", "media": null, "score": 9, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o3tpg/how_did_we_serve_more_than_20000_ipython/", "name": "t3_3o3tpg", "created": 1444430552.0, "url": "https://developer.rackspace.com/blog/how-did-we-serve-more-than-20000-ipython-notebooks-for-nature/", "author_flair_text": null, "quarantine": false, "title": "How did we serve more than 20,000 IPython notebooks for Nature readers", "created_utc": 1444401752.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 9}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am constructing a python program that must allow users to slide a bar over a picture and tell the position of the bar in relation to the picture size. Any suggestions on how to go about this?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve used many basic functions, but have not attempted anything with user input. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am constructing a python program that must allow users to slide a bar over a picture and tell the position of the bar in relation to the picture size. Any suggestions on how to go about this?\n\nI've used many basic functions, but have not attempted anything with user input. ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o63nv", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Engeneering_probs", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o63nv/user_interface_help/", "name": "t3_3o63nv", "created": 1444468002.0, "url": "https://www.reddit.com/r/Python/comments/3o63nv/user_interface_help/", "author_flair_text": null, "quarantine": false, "title": "User Interface Help", "created_utc": 1444439202.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This is my second year as a programmer and I&amp;#39;m writing larger and larger projects. What method do you use to organize and plan your code? How do you write it down? Pen and paper, OneNote, or some other software?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "This is my second year as a programmer and I'm writing larger and larger projects. What method do you use to organize and plan your code? How do you write it down? Pen and paper, OneNote, or some other software?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o618u", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "WorkInjuries", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o618u/what_are_some_tips_and_tricks_for_planning_your/", "name": "t3_3o618u", "created": 1444466685.0, "url": "https://www.reddit.com/r/Python/comments/3o618u/what_are_some_tips_and_tricks_for_planning_your/", "author_flair_text": null, "quarantine": false, "title": "What are some tips and tricks for planning your program?", "created_utc": 1444437885.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"domain": "josauder.github.io", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o2ja3", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "cast42", "media": null, "score": 21, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o2ja3/procedural_city_generation_in_python/", "name": "t3_3o2ja3", "created": 1444399839.0, "url": "http://josauder.github.io/procedural_city_generation/", "author_flair_text": null, "quarantine": false, "title": "Procedural City Generation in Python", "created_utc": 1444371039.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 21}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;How can I fix this problem, I am uncertain of what to unstall. I am trying to install PyWin32. I have reinstalled the program...&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "How can I fix this problem, I am uncertain of what to unstall. I am trying to install PyWin32. I have reinstalled the program...", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o5nhr", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "secretchannel", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o5nhr/the_program_cant_start_because_vcruntime140ddll/", "name": "t3_3o5nhr", "created": 1444459488.0, "url": "https://www.reddit.com/r/Python/comments/3o5nhr/the_program_cant_start_because_vcruntime140ddll/", "author_flair_text": null, "quarantine": false, "title": "The program can't start because VCRUNTIME140D.dll is missing from your computer. Try reinstalling the program to fix this problem", "created_utc": 1444430688.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey Reddit! I&amp;#39;m Chris, a developer on the &lt;a href=\"https://www.onedrive.com\"&gt;OneDrive&lt;/a&gt; team at Microsoft. I&amp;#39;m very excited to announce that today is the official release of our &lt;strong&gt;&lt;a href=\"https://github.com/OneDrive/onedrive-sdk-python\"&gt;Python SDK&lt;/a&gt;&lt;/strong&gt;! It wraps our RESTful &lt;a href=\"https://dev.onedrive.com/\"&gt;OneDrive API&lt;/a&gt; in nice Python objects. Some features:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Supports Python 2.7 and 3.4&lt;/li&gt;\n&lt;li&gt;Synchronous and asynchronous calls (via &lt;code&gt;asyncio&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;Uses &lt;code&gt;requests&lt;/code&gt; library as its default HTTP layer, but supports injection of other HTTP providers&lt;/li&gt;\n&lt;li&gt;Helpers for OAuth for either server or client apps&lt;/li&gt;\n&lt;li&gt;Includes sample app (command line OneDrive app)&lt;/li&gt;\n&lt;li&gt;Try it out: &lt;code&gt;pip install onedrivesdk&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;As you can see, it&amp;#39;s all open source. Think you can improve our code? Submit a pull request! Find a bug? Open an Issue! If you have any questions or feedback, you can definitely post them here too.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey Reddit! I'm Chris, a developer on the [OneDrive](https://www.onedrive.com) team at Microsoft. I'm very excited to announce that today is the official release of our **[Python SDK](https://github.com/OneDrive/onedrive-sdk-python)**! It wraps our RESTful [OneDrive API](https://dev.onedrive.com/) in nice Python objects. Some features:\n\n* Supports Python 2.7 and 3.4\n* Synchronous and asynchronous calls (via `asyncio`)\n* Uses `requests` library as its default HTTP layer, but supports injection of other HTTP providers\n* Helpers for OAuth for either server or client apps\n* Includes sample app (command line OneDrive app)\n* Try it out: `pip install onedrivesdk`\n\nAs you can see, it's all open source. Think you can improve our code? Submit a pull request! Find a bug? Open an Issue! If you have any questions or feedback, you can definitely post them here too.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3nzsi0", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "cmayer-ms", "media": null, "score": 207, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 29, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3nzsi0/onedrive_sdk_for_python_100_released_mit_license/", "name": "t3_3nzsi0", "created": 1444353074.0, "url": "https://www.reddit.com/r/Python/comments/3nzsi0/onedrive_sdk_for_python_100_released_mit_license/", "author_flair_text": null, "quarantine": false, "title": "OneDrive SDK for Python 1.0.0 released! MIT License, on Github and PyPI", "created_utc": 1444324274.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 207}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m curious what languages/frameworks you guys think would work best for my project. I made a Python script to scrape some data from a website using BeautifulSoup. I want to display that data with some charts on a website. I&amp;#39;ve used highcharts.js before and it worked great. What route would you suggest I go? &lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello,\n\nI'm curious what languages/frameworks you guys think would work best for my project. I made a Python script to scrape some data from a website using BeautifulSoup. I want to display that data with some charts on a website. I've used highcharts.js before and it worked great. What route would you suggest I go? \n\nThanks!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o4etp", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "lrobinson2011", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 3, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o4etp/visualizing_data_from_web_scraping/", "name": "t3_3o4etp", "created": 1444439696.0, "url": "https://www.reddit.com/r/Python/comments/3o4etp/visualizing_data_from_web_scraping/", "author_flair_text": null, "quarantine": false, "title": "Visualizing data from web scraping?", "created_utc": 1444410896.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi... I installed Blend for Visual Studio 2015 on Windows 10 64bit. I installed Python Tools during the installation process. When I first opened Visual Studio the template for Python was there. In File &amp;gt; New &amp;gt; Project\nBut on restart it was gone.... I reinstalled Visual Studio and the problem happened again.\nI installed it on another computer with Windows 7 64bit... And it has the same problem.\nPython template just disappears on second launch of application.&lt;/p&gt;\n\n&lt;p&gt;Unfortunately everything I tried didn&amp;#39;t work. :( Here are some screenshots to clarify the problem. This time installed with typical settings. Same problem.\n&lt;a href=\"http://imgur.com/a/h9Eah\"&gt;http://imgur.com/a/h9Eah&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi... I installed Blend for Visual Studio 2015 on Windows 10 64bit. I installed Python Tools during the installation process. When I first opened Visual Studio the template for Python was there. In File &gt; New &gt; Project\nBut on restart it was gone.... I reinstalled Visual Studio and the problem happened again.\nI installed it on another computer with Windows 7 64bit... And it has the same problem.\nPython template just disappears on second launch of application.\n\nUnfortunately everything I tried didn't work. :( Here are some screenshots to clarify the problem. This time installed with typical settings. Same problem.\nhttp://imgur.com/a/h9Eah", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o3cfo", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "0x377a", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o3cfo/python_template_missing_from_visual_studio_2015/", "name": "t3_3o3cfo", "created": 1444422018.0, "url": "https://www.reddit.com/r/Python/comments/3o3cfo/python_template_missing_from_visual_studio_2015/", "author_flair_text": null, "quarantine": false, "title": "Python template missing from Visual Studio 2015? Take 2.", "created_utc": 1444393218.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I just recently learned the try...except block in Python, and I&amp;#39;m wondering what should I choose between try...except block and if...else block for error checking? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "So I just recently learned the try...except block in Python, and I'm wondering what should I choose between try...except block and if...else block for error checking? ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o36h8", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "brucejimenez", "media": null, "score": 4, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 24, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o36h8/would_it_be_better_to_use_tryexcept_rather_than/", "name": "t3_3o36h8", "created": 1444418258.0, "url": "https://www.reddit.com/r/Python/comments/3o36h8/would_it_be_better_to_use_tryexcept_rather_than/", "author_flair_text": null, "quarantine": false, "title": "Would it be better to use try...except rather than using if...else for error checking?", "created_utc": 1444389458.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 4}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am trying to parse a large text file filled with just utter garbage.. So far I&amp;#39;ve found anywhere from 1-5 lines of text should actually all be on a single line in the document. I was hoping to just iterate through the document and append the lines together using line.startswith. Can I insert a regex such as /[0-9]{1,2}/[0-9]{1,2}/20[0-9]{1,2} which will only match lines with that format?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data=open(&amp;quot;file&amp;quot;).readlines()\nfor n,line in enumerate(data):\n    if line.startswith(&amp;quot;line&amp;quot;):\n       data[n] = &amp;quot;\\n&amp;quot;+line.rstrip()\n    else:\n       data[n]=line.rstrip()\nprint &amp;#39;|&amp;#39;.join(data)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am trying to parse a large text file filled with just utter garbage.. So far I've found anywhere from 1-5 lines of text should actually all be on a single line in the document. I was hoping to just iterate through the document and append the lines together using line.startswith. Can I insert a regex such as /[0-9]{1,2}/[0-9]{1,2}/20[0-9]{1,2} which will only match lines with that format?\n\n    data=open(\"file\").readlines()\n    for n,line in enumerate(data):\n        if line.startswith(\"line\"):\n           data[n] = \"\\n\"+line.rstrip()\n        else:\n           data[n]=line.rstrip()\n    print '|'.join(data)", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o3o37", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "zxcqwevbnrty", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 7, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o3o37/linestartswith_regex_capable/", "name": "t3_3o3o37", "created": 1444427937.0, "url": "https://www.reddit.com/r/Python/comments/3o3o37/linestartswith_regex_capable/", "author_flair_text": null, "quarantine": false, "title": "line.startswith regex capable?", "created_utc": 1444399137.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o2gcm", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "mardix", "media": null, "score": 4, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 6, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/Python/comments/3o2gcm/propel_deploy_multiple_flaskdjango_or_any_python/", "name": "t3_3o2gcm", "created": 1444397900.0, "url": "https://github.com/mardix/Propel?p", "author_flair_text": null, "quarantine": false, "title": "Propel: Deploy multiple Flask/Django or any Python applications on a single server", "created_utc": 1444369100.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 4}}, {"kind": "t3", "data": {"domain": "self.Python", "banned_by": null, "media_embed": {}, "subreddit": "Python", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello fellow developers! I have just finished writing and testing PyFHI (Python File Handling Improved). Version 1.0.0 can be installed via pip:&lt;/p&gt;\n\n&lt;p&gt;pip install pyfhi&lt;/p&gt;\n\n&lt;p&gt;PyFHI is a patch fixing several issues with Python file handling. There is plenty of information on &lt;a href=\"https://baas-becking.biology.utah.edu/cjuserprofilelayout/987:ahyer?view=profile\"&gt;my blog&lt;/a&gt; and on &lt;a href=\"https://github.com/TheOneHyer/PyFHI\"&gt;GitHub&lt;/a&gt; so I will only give a brief overview of what PyFHI accomplishes here.&lt;/p&gt;\n\n&lt;p&gt;Currently, Python doesn&amp;#39;t have a good way to open large files at the beginning of a program (to check user permissions) and keep a hold of them (to avoid the race condition) without the code looking ugly. Small files can be loaded into a variable but large files such as those of metagenomes, enormous data tables, etc. cannot be readily loaded into memory. In addition, manual calls to the next (Python 2) and &lt;em&gt;next&lt;/em&gt; (Python 3) methods are not cross-compatible, printing file handles is ugly, and open file handles are not easily traced/closed.&lt;/p&gt;\n\n&lt;p&gt;PyFHI solves all these issues in a way that is easy to the programmer (see my blog or GitHub for details) and readily extensible. I plan on submitting this patch as a PEP so please let me know your thoughts and issues with PyFHI at &lt;a href=\"mailto:theonehyer@gmail.com\"&gt;theonehyer@gmail.com&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Thanks!\ufeff&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello fellow developers! I have just finished writing and testing PyFHI (Python File Handling Improved). Version 1.0.0 can be installed via pip:\n\npip install pyfhi\n\nPyFHI is a patch fixing several issues with Python file handling. There is plenty of information on [my blog] (https://baas-becking.biology.utah.edu/cjuserprofilelayout/987:ahyer?view=profile ) and on [GitHub] (https://github.com/TheOneHyer/PyFHI) so I will only give a brief overview of what PyFHI accomplishes here.\n\nCurrently, Python doesn't have a good way to open large files at the beginning of a program (to check user permissions) and keep a hold of them (to avoid the race condition) without the code looking ugly. Small files can be loaded into a variable but large files such as those of metagenomes, enormous data tables, etc. cannot be readily loaded into memory. In addition, manual calls to the next (Python 2) and _next_ (Python 3) methods are not cross-compatible, printing file handles is ugly, and open file handles are not easily traced/closed.\n\nPyFHI solves all these issues in a way that is easy to the programmer (see my blog or GitHub for details) and readily extensible. I plan on submitting this patch as a PEP so please let me know your thoughts and issues with PyFHI at theonehyer@gmail.com\n\nThanks!\ufeff", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3o1clp", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "TheOneHyer", "media": null, "score": 11, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 12, "thumbnail": "", "subreddit_id": "t5_2qh0y", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/Python/comments/3o1clp/pyfhi_python_file_handling_improved/", "name": "t3_3o1clp", "created": 1444376642.0, "url": "https://www.reddit.com/r/Python/comments/3o1clp/pyfhi_python_file_handling_improved/", "author_flair_text": null, "quarantine": false, "title": "PyFHI (Python File Handling Improved)", "created_utc": 1444347842.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 11}}], "after": "t3_3o1clp", "before": null}}